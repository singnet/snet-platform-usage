---
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7-node
      - image: circleci/mysql:8.0.16
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: unittest_db
          MYSQL_USER: unittest_root
          MYSQL_PASSWORD: unittest_pwd
    working_directory: ~/singnet
    environment:
      PYTHONPATH: ~/singnet/snet-platform-usage/metering
    steps:
      - checkout
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 30`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Initialise tables.
          command: |
            cd metering
            sudo pip install alembic pymysql cryptography
            PYTHONPATH=$PWD
            alembic upgrade head
      - run:
          name: Install dependencies
          command: |
            cd metering
            sudo pip install -r requirements.txt
            sudo apt update
            sudo apt install unzip -y
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip sonar-scanner-cli-4.6.2.2472-linux.zip
      - run:
          name: run tests for metering
          command: |
            cd metering
            sudo pip install coverage coveralls pytest
            PYTHONPATH=$PWD python -m coverage run --omit=*__init__.py,config.py  -m pytest tests/test_total_calls.py
            python -m coverage xml --omit=*__init__.py,config.py
            export SONAR_SCANNER_OPTS="-Xmx2048m"
            sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner -Dsonar.host.url=https://sonarqube.singularitynet.io -Dsonar.login=${SONAR_TOKEN} $SONAR_SCANNER_OPTS_CUSTOM
            #COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN} python -m coveralls
